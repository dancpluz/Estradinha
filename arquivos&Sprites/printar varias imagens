.data 
.include "img1.s"

.text 

j main

# Desenha uma imagem com endereço começando em a0
drawImage:
    li t0, 0xFF000000
    li t1, 0xFF012C00
    
    
    # t2 = i = 0
    mv t2, zero 
    
    drawImage_loop:
        # condicao de saida
        beq t0, t1, drawImage_exitLoop 
        
        # pega pixeis da memoria
        add t3, t2, a0
        lw t3, 0(t3)
        
        # escrevendo pixeis na memoria
        sw t3, 0(t0)
        
        # ajusta registradores que guardam endereco
        addi t2, t2, 4
        addi t0, t0, 4
        j drawImage_loop
    
    drawImage_exitLoop:
    ret
    
    
main:

    # s0 = numero de imagens 
    li s0, 2
    # s1 = imagem atual
    li s1, 0

    movement_loop:
        # t0 = endereco da imagem atual
        li t0, 76800 # 76800 = 320 * 240
        mul t0, t0,  s1  # t0 = 320 * 240 * imagem atual
        la t1, img1 
        add t0, t0, t1 # t0 = img1 + 320 * 240 * imagem atual
        
        # desenhar imagem atual
        mv a0, t0 
        call drawImage
        
        # s1 = (s1 + 1) % s0
        addi s1, s1, 1 
        rem s1, s1, s0 
        
        j movement_loop
        
        
    
    # sair 
    li a0, 10 
    ecall